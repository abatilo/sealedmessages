apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: "default"
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}
          {{- if .Values.image.tag -}}
            :{{ .Values.image.tag }}
          {{- end }}"
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "10"]
          env:
          {{- range $k, $v := .Values.env }}
          {{- if or (kindIs "string" $v) (kindIs "bool" $v) }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- else if kindIs "slice" $v }}
            - name: {{ $k }}
              value: {{ join "\n" $v | quote }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 2
              memory: 2Gi
#           readinessProbe:
#             httpGet:
#               path: /readyz
#               port: http
#             periodSeconds: 5
#             failureThreshold: 2
#             timeoutSeconds: 3
#           livenessProbe:
#             httpGet:
#               path: /healthz
#               port: http
#             initialDelaySeconds: 30
#             periodSeconds: 30
#             failureThreshold: 2
