name: "Continuous Integration"
on:
  push:
    branches:
      - "main"

permissions:
  packages: write
  contents: read

jobs:
  build-backend-ci:
    name: "Build backend-ci"
    runs-on:
      ubuntu-20.04
    steps:
      - name: "Clone repository"
        uses: actions/checkout@v2

      - name: "Install docker buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          target: build-backend
          context: .
          file: ./operations/Dockerfile
          cache-from: type=registry,ref=ghcr.io/abatilo/sealedmessages:backend-buildcache
          cache-to: type=registry,ref=ghcr.io/abatilo/sealedmessages:backend-buildcache,mode=max
          labels: |
            org.opencontainers.image.source=https://github.com/abatilo/sealedmessages

  build-frontend-ci:
    name: "Build frontend-ci"
    runs-on:
      ubuntu-20.04
    steps:
      - name: "Clone repository"
        uses: actions/checkout@v2

      - name: "Install docker buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          target: build-frontend
          context: .
          file: ./operations/Dockerfile
          cache-from: type=registry,ref=ghcr.io/abatilo/sealedmessages:frontend-buildcache
          cache-to: type=registry,ref=ghcr.io/abatilo/sealedmessages:frontend-buildcache,mode=max
          labels: |
            org.opencontainers.image.source=https://github.com/abatilo/sealedmessages

  backend-ci:
    needs: ["build-backend-ci"]
    strategy:
      fail-fast: false
      matrix:
        command:
          - "black --diff ."
          - "python manage.py test"
    name: "Run checks"
    runs-on:
      ubuntu-20.04
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11.11
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: local_password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: "Clone repository"
        uses: actions/checkout@v2

      - name: "Install docker buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          load: true
          target: build-backend
          tags: backend-ci
          context: .
          file: ./operations/Dockerfile
          cache-from: type=registry,ref=ghcr.io/abatilo/sealedmessages:backend-buildcache
          labels: |
            org.opencontainers.image.source=https://github.com/abatilo/sealedmessages

      - name: "Execute check"
        env:
          DB_HOST: "localhost"
          DB_PASSWORD: "local_password"
        run: |
          docker run \
            --network host -e DB_HOST -e DB_PASSWORD \
            backend-ci ${{ matrix.command }}

  frontend-ci:
    needs: ["build-frontend-ci"]
    strategy:
      fail-fast: false
      matrix:
        command:
          - "yarn test"
    name: "Run checks"
    runs-on:
      ubuntu-20.04

    steps:
      - name: "Clone repository"
        uses: actions/checkout@v2

      - name: "Install docker buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          load: true
          target: build-frontend
          tags: frontend-ci
          context: .
          file: ./operations/Dockerfile
          cache-from: type=registry,ref=ghcr.io/abatilo/sealedmessages:frontend-buildcache
          labels: |
            org.opencontainers.image.source=https://github.com/abatilo/sealedmessages

      - name: "Execute check"
        run: |
          docker run \
            -e CI \
            frontend-ci ${{ matrix.command }}

  final-build:
    needs: ["backend-ci", "frontend-ci"]
    name: "Build final container"
    runs-on:
      ubuntu-20.04
    steps:
      - name: "Clone repository"
        uses: actions/checkout@v2

      - name: "Install docker buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/abatilo/sealedmessages:${{ github.sha }}
          context: .
          file: ./operations/Dockerfile
          cache-from: |
            type=registry,ref=ghcr.io/abatilo/sealedmessages:buildcache
            type=registry,ref=ghcr.io/abatilo/sealedmessages:backend-buildcache
            type=registry,ref=ghcr.io/abatilo/sealedmessages:frontend-buildcache
          cache-to: type=registry,ref=ghcr.io/abatilo/sealedmessages:buildcache
          labels: |
            org.opencontainers.image.source=https://github.com/abatilo/sealedmessages
